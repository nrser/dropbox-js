// Generated by CoffeeScript 1.9.1
(function() {
  describe('Dropbox.Http.PulledChanges', function() {
    return describe('.parse', function() {
      describe('on a sample response', function() {
        beforeEach(function() {
          var deltaInfo;
          deltaInfo = {
            "reset": false,
            "cursor": "nTZYLOcTQnyB7-Wc72M-kEAcBQdk2EjLaJIRupQWgDXmRwKWzuG5V4se2mvU7yzXn4cZSJltoW4tpbqgy0Ezxh1b1p3ygp7wy-vdaYJusujnLAyEsKdYCHPZYZdZt7sQG0BopF2ufAuD56ijYbdX5DhMKe85MFqncnFDvNxSjsodEw-IkCfNZmagDmpOZCxmLqu71hLTApwhqO9-dhm-fk6KSYs-OZwRmVwOE2JAnJbWuifNiM8KwMz5sRBZ5FMJPDqXpOW5PqPCwbkAmKQACbNXFi0k1JuxulpDlQh3zMr3lyLMs-fmaDTTU355mY5xSAXK05Zgs5rPJ6lcaBOUmEBSXcPhxFDHk5NmAdA03Shq04t2_4bupzWX-txT84FmOLNncchl7ZDBCMwyrAzD2kCYOTu1_lhui0C-fiCZgZBKU4OyP6qrkdo4gZu3",
            "has_more": true,
            "entries": [
              [
                "/Getting_Started.pdf", {
                  "size": "225.4KB",
                  "rev": "35e97029684fe",
                  "thumb_exists": true,
                  "bytes": 230783,
                  "modified": "Tue, 19 Jul 2011 21:55:38 +0000",
                  "client_mtime": "Mon, 18 Jul 2011 18:04:35 +0000",
                  "path": "/Getting_Started.pdf",
                  "is_dir": false,
                  "icon": "page_white_acrobat",
                  "root": "app_folder",
                  "mime_type": "application/pdf",
                  "revision": 220823
                }
              ], ["/Public", null]
            ]
          };
          return this.changes = Dropbox.Http.PulledChanges.parse(deltaInfo);
        });
        it('parses blankSlate correctly', function() {
          expect(this.changes).to.have.property('blankSlate');
          return expect(this.changes.blankSlate).to.equal(false);
        });
        it('parses cursorTag correctly', function() {
          expect(this.changes).to.have.property('cursorTag');
          return expect(this.changes.cursorTag).to.equal('nTZYLOcTQnyB7-Wc72M-kEAcBQdk2EjLaJIRupQWgDXmRwKWzuG5V4se2mvU7yzXn4cZSJltoW4tpbqgy0Ezxh1b1p3ygp7wy-vdaYJusujnLAyEsKdYCHPZYZdZt7sQG0BopF2ufAuD56ijYbdX5DhMKe85MFqncnFDvNxSjsodEw-IkCfNZmagDmpOZCxmLqu71hLTApwhqO9-dhm-fk6KSYs-OZwRmVwOE2JAnJbWuifNiM8KwMz5sRBZ5FMJPDqXpOW5PqPCwbkAmKQACbNXFi0k1JuxulpDlQh3zMr3lyLMs-fmaDTTU355mY5xSAXK05Zgs5rPJ6lcaBOUmEBSXcPhxFDHk5NmAdA03Shq04t2_4bupzWX-txT84FmOLNncchl7ZDBCMwyrAzD2kCYOTu1_lhui0C-fiCZgZBKU4OyP6qrkdo4gZu3');
        });
        it('parses shouldPullAgain correctly', function() {
          expect(this.changes).to.have.property('shouldPullAgain');
          return expect(this.changes.shouldPullAgain).to.equal(true);
        });
        it('parses shouldBackOff correctly', function() {
          expect(this.changes).to.have.property('shouldBackOff');
          return expect(this.changes.shouldBackOff).to.equal(false);
        });
        return it('parses changes correctly', function() {
          expect(this.changes).to.have.property('changes');
          expect(this.changes.changes).to.have.length(2);
          expect(this.changes.changes[0]).to.be.instanceOf(Dropbox.Http.PulledChange);
          expect(this.changes.changes[0].path).to.equal('/Getting_Started.pdf');
          expect(this.changes.changes[1]).to.be.instanceOf(Dropbox.Http.PulledChange);
          return expect(this.changes.changes[1].path).to.equal('/Public');
        });
      });
      it('passes null through', function() {
        return expect(Dropbox.Http.PulledChanges.parse(null)).to.equal(null);
      });
      return it('passes undefined through', function() {
        return expect(Dropbox.Http.PulledChanges.parse(void 0)).to.equal(void 0);
      });
    });
  });

  describe('Dropbox.Http.PulledChange', function() {
    return describe('.parse', function() {
      describe('on a modification change', function() {
        beforeEach(function() {
          var entry;
          entry = [
            "/Getting_Started.pdf", {
              "size": "225.4KB",
              "rev": "35e97029684fe",
              "thumb_exists": true,
              "bytes": 230783,
              "modified": "Tue, 19 Jul 2011 21:55:38 +0000",
              "client_mtime": "Mon, 18 Jul 2011 18:04:35 +0000",
              "path": "/Getting_Started.pdf",
              "is_dir": false,
              "icon": "page_white_acrobat",
              "root": "app_folder",
              "mime_type": "application/pdf",
              "revision": 220823
            }
          ];
          return this.changes = Dropbox.Http.PulledChange.parse(entry);
        });
        it('parses path correctly', function() {
          expect(this.changes).to.have.property('path');
          return expect(this.changes.path).to.equal('/Getting_Started.pdf');
        });
        it('parses wasRemoved correctly', function() {
          expect(this.changes).to.have.property('wasRemoved');
          return expect(this.changes.wasRemoved).to.equal(false);
        });
        return it('parses stat correctly', function() {
          expect(this.changes).to.have.property('stat');
          expect(this.changes.stat).to.be.instanceOf(Dropbox.File.Stat);
          return expect(this.changes.stat.path).to.equal(this.changes.path);
        });
      });
      describe('on a deletion change', function() {
        beforeEach(function() {
          var entry;
          entry = ["/Public", null];
          return this.changes = Dropbox.Http.PulledChange.parse(entry);
        });
        it('parses path correctly', function() {
          expect(this.changes).to.have.property('path');
          return expect(this.changes.path).to.equal('/Public');
        });
        it('parses wasRemoved correctly', function() {
          expect(this.changes).to.have.property('wasRemoved');
          return expect(this.changes.wasRemoved).to.equal(true);
        });
        return it('parses stat correctly', function() {
          expect(this.changes).to.have.property('stat');
          return expect(this.changes.stat).to.equal(null);
        });
      });
      it('passes null through', function() {
        return expect(Dropbox.Http.PulledChange.parse(null)).to.equal(null);
      });
      return it('passes undefined through', function() {
        return expect(Dropbox.Http.PulledChange.parse(void 0)).to.equal(void 0);
      });
    });
  });

}).call(this);
