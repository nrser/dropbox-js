// Generated by CoffeeScript 1.9.1
(function() {
  describe('Dropbox.AccountInfo', function() {
    return describe('.parse', function() {
      describe('on the API example', function() {
        beforeEach(function() {
          var userData;
          userData = {
            "referral_link": "https://www.dropbox.com/referrals/r1a2n3d4m5s6t7",
            "display_name": "John P. User",
            "uid": 12345678,
            "country": "US",
            "quota_info": {
              "shared": 253738410565,
              "quota": 107374182400000,
              "normal": 680031877871
            },
            "email": "johnpuser@company.com"
          };
          return this.accountInfo = Dropbox.AccountInfo.parse(userData);
        });
        it('parses name correctly', function() {
          expect(this.accountInfo).to.have.property('name');
          return expect(this.accountInfo.name).to.equal('John P. User');
        });
        it('parses email correctly', function() {
          expect(this.accountInfo).to.have.property('email');
          return expect(this.accountInfo.email).to.equal('johnpuser@company.com');
        });
        it('parses countryCode correctly', function() {
          expect(this.accountInfo).to.have.property('countryCode');
          return expect(this.accountInfo.countryCode).to.equal('US');
        });
        it('parses uid correctly', function() {
          expect(this.accountInfo).to.have.property('uid');
          return expect(this.accountInfo.uid).to.equal('12345678');
        });
        it('parses referralUrl correctly', function() {
          expect(this.accountInfo).to.have.property('referralUrl');
          return expect(this.accountInfo.referralUrl).to.equal('https://www.dropbox.com/referrals/r1a2n3d4m5s6t7');
        });
        it('parses quota correctly', function() {
          expect(this.accountInfo).to.have.property('quota');
          return expect(this.accountInfo.quota).to.equal(107374182400000);
        });
        it('parses usedQuota correctly', function() {
          expect(this.accountInfo).to.have.property('usedQuota');
          return expect(this.accountInfo.usedQuota).to.equal(933770288436);
        });
        it('parses privateBytes correctly', function() {
          expect(this.accountInfo).to.have.property('privateBytes');
          return expect(this.accountInfo.privateBytes).to.equal(680031877871);
        });
        it('parses sharedBytes correctly', function() {
          expect(this.accountInfo).to.have.property('usedQuota');
          return expect(this.accountInfo.sharedBytes).to.equal(253738410565);
        });
        it('parses publicAppUrl correctly', function() {
          return expect(this.accountInfo.publicAppUrl).to.equal(null);
        });
        return it('round-trips through json / parse correctly', function() {
          var newInfo;
          newInfo = Dropbox.AccountInfo.parse(this.accountInfo.json());
          return expect(newInfo).to.deep.equal(this.accountInfo);
        });
      });
      it('passes null through', function() {
        return expect(Dropbox.AccountInfo.parse(null)).to.equal(null);
      });
      it('passes undefined through', function() {
        return expect(Dropbox.AccountInfo.parse(void 0)).to.equal(void 0);
      });
      return describe('on real data from a "public app folder" application', function() {
        beforeEach(function() {
          var userData;
          userData = {
            "referral_link": "https://www.dropbox.com/referrals/NTM1OTg4MTA5",
            "display_name": "Victor Costan",
            "uid": 87654321,
            "public_app_url": "https://dl-web.dropbox.com/spa/90vw6zlu4268jh4/",
            "country": "US",
            "quota_info": {
              "shared": 6074393565,
              "quota": 73201090560,
              "normal": 4684642723
            },
            "email": "spam@gmail.com"
          };
          return this.accountInfo = Dropbox.AccountInfo.parse(userData);
        });
        it('parses publicAppUrl correctly', function() {
          return expect(this.accountInfo.publicAppUrl).to.equal('https://dl-web.dropbox.com/spa/90vw6zlu4268jh4');
        });
        return it('round-trips through json / parse correctly', function() {
          var newInfo;
          newInfo = Dropbox.AccountInfo.parse(this.accountInfo.json());
          return expect(newInfo).to.deep.equal(this.accountInfo);
        });
      });
    });
  });

}).call(this);
